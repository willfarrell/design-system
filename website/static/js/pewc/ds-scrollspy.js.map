{
  "version": 3,
  "sources": ["ds-scrollspy.js"],
  "sourcesContent": ["/* eslint-env browser */\n// https://www.nngroup.com/articles/table-of-contents/\nconst d = document\n\n/* <nav is=\"ds-scrollspy\"><ul><li><a href=\"#id\">heading</a></li></ul></nav> */\nconst anchors = [...d.querySelectorAll('[id]')]\ncustomElements.define(\n  'ds-scrollspy',\n  class extends HTMLElement {\n    constructor() {\n      super()\n\n      this.links = this.querySelectorAll('[href^=\"#\"]')\n\n      this.previousY = 0\n      this.observer = new IntersectionObserver(\n        (entries) => {\n          for (const entry of entries) {\n            const currentY = entry.boundingClientRect.y\n            if (entry.isIntersecting) {\n              if (this.previousY < currentY) {\n                // next\n                this.setActive(entry.target.id)\n              } else {\n                // previous\n                const index = anchors.findIndex(\n                  (elem) => elem.id === entry.target.id\n                )\n                this.setActive(anchors[index - 1]?.id)\n              }\n              this.previousY = currentY\n            }\n          }\n        },\n        {\n          rootMargin: '-50% 0px'\n        }\n      )\n    }\n\n    setActiveHash() {\n      this.previousY = window.pageYOffset\n      this.setActive(window.location.hash.substring(1))\n    }\n    setActive(id) {\n      const item = this.querySelector(`[href=\"#${id}\"]`)\n      this.links.forEach((elem) => elem?.removeAttribute('aria-current'))\n      item.setAttribute('aria-current', 'true')\n    }\n\n    connectedCallback() {\n      this.setActiveHash()\n      window.addEventListener('hashchange', () => {\n        this.setActiveHash()\n      })\n      this.links.forEach((elem) => {\n        const id = elem.href.split('#')[1]\n        const anchor = d.querySelector(`[id=\"${id}\"]`)\n        this.observer.observe(anchor)\n      })\n    }\n\n    disconnectedCallback() {\n      this.links.forEach((elem) => {\n        const id = elem.href.substring(1)\n        const anchor = d.querySelector(`[id=\"${id}\"]`)\n        this.observer.unobserve(anchor)\n      })\n    }\n  },\n  { extends: 'nav' }\n)\n"],
  "mappings": "AAEA,IAAMA,EAAI,SAGJC,EAAU,CAAC,GAAGD,EAAE,iBAAiB,MAAM,CAAC,EAC9C,eAAe,OACb,eACA,cAAc,WAAY,CACxB,aAAc,CACZ,MAAM,EAEN,KAAK,MAAQ,KAAK,iBAAiB,aAAa,EAEhD,KAAK,UAAY,EACjB,KAAK,SAAW,IAAI,qBACjBE,GAAY,CACX,QAAWC,KAASD,EAAS,CAC3B,IAAME,EAAWD,EAAM,mBAAmB,EAC1C,GAAIA,EAAM,eAAgB,CACxB,GAAI,KAAK,UAAYC,EAEnB,KAAK,UAAUD,EAAM,OAAO,EAAE,MACzB,CAEL,IAAME,EAAQJ,EAAQ,UACnBK,GAASA,EAAK,KAAOH,EAAM,OAAO,EACrC,EACA,KAAK,UAAUF,EAAQI,EAAQ,CAAC,GAAG,EAAE,CACvC,CACA,KAAK,UAAYD,CACnB,CACF,CACF,EACA,CACE,WAAY,UACd,CACF,CACF,CAEA,eAAgB,CACd,KAAK,UAAY,OAAO,YACxB,KAAK,UAAU,OAAO,SAAS,KAAK,UAAU,CAAC,CAAC,CAClD,CACA,UAAUG,EAAI,CACZ,IAAMC,EAAO,KAAK,cAAc,WAAWD,CAAE,IAAI,EACjD,KAAK,MAAM,QAASD,GAASA,GAAM,gBAAgB,cAAc,CAAC,EAClEE,EAAK,aAAa,eAAgB,MAAM,CAC1C,CAEA,mBAAoB,CAClB,KAAK,cAAc,EACnB,OAAO,iBAAiB,aAAc,IAAM,CAC1C,KAAK,cAAc,CACrB,CAAC,EACD,KAAK,MAAM,QAASF,GAAS,CAC3B,IAAMC,EAAKD,EAAK,KAAK,MAAM,GAAG,EAAE,CAAC,EAC3BG,EAAST,EAAE,cAAc,QAAQO,CAAE,IAAI,EAC7C,KAAK,SAAS,QAAQE,CAAM,CAC9B,CAAC,CACH,CAEA,sBAAuB,CACrB,KAAK,MAAM,QAASH,GAAS,CAC3B,IAAMC,EAAKD,EAAK,KAAK,UAAU,CAAC,EAC1BG,EAAST,EAAE,cAAc,QAAQO,CAAE,IAAI,EAC7C,KAAK,SAAS,UAAUE,CAAM,CAChC,CAAC,CACH,CACF,EACA,CAAE,QAAS,KAAM,CACnB",
  "names": ["d", "anchors", "entries", "entry", "currentY", "index", "elem", "id", "item", "anchor"]
}
