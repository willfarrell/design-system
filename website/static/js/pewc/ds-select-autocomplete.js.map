{
  "version": 3,
  "sources": ["ds-select-autocomplete.js"],
  "sourcesContent": ["/* eslint-env browser */\n\nconst is = 'ds-select-autocomplete'\ncustomElements.define(\n  is,\n  class extends HTMLSelectElement {\n    constructor() {\n      super()\n    }\n    async initialize() {\n      const parentNode = this.parentNode\n      const i18n = this.dataI18n\n        ? await import(this.dataI18n)\n        : (n) => {\n            switch (n) {\n              case 0:\n                return 'No results.'\n              case 1:\n                return '1 result available.'\n              default:\n                return `${n} results available.`\n            }\n          }\n      const textNoResults = this.dataI18nZeroResults ?? 'no results' // TODO update to i18n\n\n      const select = this\n      setAttributes(select, {\n        'aria-hidden': 'true',\n        tabindex: -1,\n        class: 'visually-hidden'\n      })\n      const setValue = (value, label) => {\n        select.value = value\n        input.value = label\n      }\n\n      const options = {}\n      this.querySelector('option').forEach((option) => {\n        options[option.value] = {\n          text: option.innerText,\n          textLowercase: option.innerText.toLowercase(),\n          alt: options.dataAlt,\n          altLowercase: options.dataAlt.toLowercase()\n        }\n      })\n\n      const input = d.createElement('input')\n      setAttributes(input, {\n        type: 'text',\n        'aria-autocomplete': 'list',\n        'aria-owns': select.id + '-options',\n        'aria-expanded': 'false',\n        autocapitalize: 'none',\n        autocorrect: 'off',\n        spellcheck: 'false'\n      })\n      const inputOnClick = () => {\n        menuClear()\n\n        this.buildMenu(options)\n        this.updateStatus(options.length)\n        this.showMenu()\n        if (typeof e.currentTarget.select === 'function') {\n          e.currentTarget.select()\n        }\n      }\n      const inputOnKeyup = (event) => {\n        switch (event.keyCode) {\n          case 9: // tab\n          case 16: // shift\n          case 13: // enter\n          case 32: // space\n          case 37: // left\n          case 38: // up\n          case 39: // right\n            // ignore these keys otherwise\n            // the menu will show briefly\n            break\n          case 40: // down\n            inputDownPressed(e)\n            break\n          default:\n            inputType(e)\n        }\n      }\n      const inputOnKeydown = (event) => {\n        // tab\n        if (event.keyCode === 9) {\n          menuClear()\n        }\n      }\n      const inputOnFocus = () => {}\n      const inputDownPressed = () => {}\n      const inputType = () => {}\n      input.addEventListener('click', inputOnClick)\n      input.addEventListener('keydown', inputOnKeydown)\n      input.addEventListener('keyup', inputOnKeyup)\n      input.addEventListener('focus', inputOnFocus)\n      parentNode.append(input)\n\n      const menu = d.createElement('ul')\n      setAttributes(menu, {\n        id: select.id + '-options',\n        role: 'listbox',\n        class: 'visually-hidden'\n      })\n      const menuClear = () => {\n        menu.innerText = ''\n      }\n\n      const menuUpdate = (value) => {\n        menuClear()\n\n        if (options[value]) {\n          // return match\n        }\n        let i = 0\n        for (const key in options) {\n          const option = options[key]\n          if (\n            option.textLowercase.includes(value) ||\n            option.altLowercase(value)\n          ) {\n            optionAdd(key, option.text)\n            i++\n          }\n        }\n        if (!i) {\n          optionAdd('', textNoResults)\n        }\n        menu.scrollTop(menu.scrollTop())\n      }\n      parentNode.append(menu)\n\n      const optionAdd = (value, label) => {\n        const item = d.createElement('li')\n        setAttributes(select, {\n          'aria-selected': 'false',\n          tabindex: -1,\n          'data-value': value\n        })\n        item.innerText = label\n        item.addEventListener('click', optionClick)\n        input.addEventListener('keydown', optionOnKeydown)\n        menu.append(item)\n      }\n      const optionClick = () => {}\n      const optionOnKeydown = () => {}\n\n      const status = d.createElement('div')\n      setAttributes(status, {\n        'aria-live': 'polite',\n        role: 'status',\n        class: 'visually-hidden'\n      })\n      parentNode.append(status)\n\n      // btn.innerHTML = trustedTypePolicy.createHTML('<html>')\n      // focus({focusVisible:true})\n    }\n  },\n  { extends: 'select' }\n)\n\nconst d = document\nconst setAttribute = (elem, key, value) => {\n  elem.setAttribute(key, value)\n}\n\nconst setAttributes = (elem, map) => {\n  for (const key in map) {\n    setAttribute(elem, key, map[key])\n  }\n}\n"],
  "mappings": "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",
  "names": ["is", "parentNode", "i18n", "n", "textNoResults", "select", "setAttributes", "setValue", "value", "label", "input", "options", "option", "d", "inputOnClick", "menuClear", "inputOnKeyup", "event", "inputDownPressed", "inputType", "inputOnKeydown", "inputOnFocus", "menu", "menuUpdate", "i", "key", "optionAdd", "item", "optionClick", "optionOnKeydown", "status", "setAttribute", "elem", "map"]
}
