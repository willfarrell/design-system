var i=document,r=[...i.querySelectorAll("[id]")];customElements.define("ds-scrollspy",class extends HTMLElement{constructor(){super(),this.links=this.querySelectorAll('[href^="#"]'),this.previousY=0,this.observer=new IntersectionObserver(s=>{for(let e of s){let t=e.boundingClientRect.y;if(e.isIntersecting){if(this.previousY<t)this.setActive(e.target.id);else{let n=r.findIndex(o=>o.id===e.target.id);this.setActive(r[n-1]?.id)}this.previousY=t}}},{rootMargin:"-50% 0px"})}setActiveHash(){this.previousY=window.pageYOffset,this.setActive(window.location.hash.substring(1))}setActive(s){let e=this.querySelector(`[href="#${s}"]`);this.links.forEach(t=>t?.removeAttribute("aria-current")),e.setAttribute("aria-current","true")}connectedCallback(){this.setActiveHash(),window.addEventListener("hashchange",()=>{this.setActiveHash()}),this.links.forEach(s=>{let e=s.href.split("#")[1],t=i.querySelector(`[id="${e}"]`);this.observer.observe(t)})}disconnectedCallback(){this.links.forEach(s=>{let e=s.href.substring(1),t=i.querySelector(`[id="${e}"]`);this.observer.unobserve(t)})}},{extends:"nav"});
